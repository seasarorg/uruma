<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns:cobertura="antlib:net.sourceforge.cobertura.ant" name="Uruma" default="report-junit" basedir=".">
  <!--======================================================================-->
  <!--=== グローバルプロパティ ===-->
  <!--======================================================================-->
  <property name="project.version" value="0.5.0" />

  <property name="src.main.dir" location="src/main/java" />
  <property name="src.test.dir" location="src/test/java" />
  <property name="resources.main.dir" location="src/main/resources" />
  <property name="resources.test.dir" location="src/test/resources" />

  <property name="classes.dir" location="classes2" />
  <property name="classes.main.dir" location="${classes.dir}/main" />
  <property name="classes.test.dir" location="${classes.dir}/test" />
  <property name="classes.instrumented.dir" location="${classes.dir}/instrumented" />

  <property name="lib.dir" location="lib" />
  <property name="lib.compile.dir" location="${lib.dir}/compile/jar" />
  <property name="lib.runtime.dir" location="${lib.dir}/runtime/jar" />
  <property name="lib.test.dir" location="${lib.dir}/test/jar" />
  <property name="lib.ant.dir" location="${lib.dir}/ant" />
  <property name="lib.cobertura.dir" location="${lib.ant.dir}/cobertura" />

  <property name="target.dir" location="target2" />
  <property name="report.dir" location="${target.dir}/report" />
  <property name="report.cobertura.datafile" location="${report.dir}/cobertura.ser" />
  <property name="report.test-result.dir" location="${report.dir}/test-result" />
  <property name="report.junit.dir" location="${report.dir}/junit" />
  <property name="report.coverage.dir" location="${report.dir}/coverage" />
  <property name="docs.dir" location="${target.dir}/docs" />
  <property name="docs.api.dir" location="${docs.dir}/apidocs" />

  <property name="log4j.filename" value="log4j-1.2.15.jar" />
  <property name="log4j.url" value="http://www.ibiblio.org/maven/log4j/jars/${log4j.filename}" />

  <!-- GUIテストを自動で進めるフラグ -->
  <property name="autotest" value="true" />

  <!--======================================================================-->
  <!--=== クラスパス定義 ===-->
  <!--======================================================================-->
  <!-- 本体コンパイル用のクラスパス -->
  <path id="classpath.main">
    <fileset dir="${lib.compile.dir}">
      <include name="*.jar" />
    </fileset>
    <fileset dir="${lib.runtime.dir}">
      <include name="*.jar" />
    </fileset>
  </path>

  <!-- テスト用のクラスパス -->
  <path id="classpath.test">
    <path refid="classpath.main" />
    <pathelement location="${classes.main.dir}" />
    <fileset dir="${lib.test.dir}">
      <include name="*.jar" />
    </fileset>
  </path>

  <!-- ant用のクラスパス -->
  <path id="classpath.ant">
    <fileset dir="${ant.library.dir}">
      <include name="*.jar" />
    </fileset>
  </path>

  <!-- cobertura用のクラスパス -->
  <path id="classpath.cobertura">
    <fileset dir="${lib.cobertura.dir}">
      <include name="*.jar" />
    </fileset>
  </path>

  <!--======================================================================-->
  <!--=== タスク定義 ===-->
  <!--======================================================================-->
  <taskdef classpathref="classpath.cobertura" resource="tasks.properties" />

  <!--======================================================================-->
  <!--=== ターゲット定義 ===-->
  <!--======================================================================-->
  <!-- 本体コンパイル -->
  <target name="compile-main" depends="init" description="Uruma本体のコンパイル">
    <javac srcdir="${src.main.dir}" destdir="${classes.main.dir}" debug="on" source="1.5" encoding="UTF-8">
      <classpath>
        <path refid="classpath.main" />
      </classpath>
    </javac>

    <copy todir="${classes.main.dir}">
      <fileset dir="${resources.main.dir}">
        <exclude name="**/.svn/**" />
      </fileset>
    </copy>
  </target>

  <!-- カバレッジ測定用コードの埋込 -->
  <target name="instrument" depends="compile-main" description="カバレッジ測定用コードの埋込">
    <delete file="${report.cobertura.datafile}" />
    <cobertura:cobertura-instrument todir="${classes.instrumented.dir}">
      <fileset dir="${classes.main.dir}">
        <include name="**/*.class" />
      </fileset>
    </cobertura:cobertura-instrument>

    <copy todir="${classes.main.dir}">
      <fileset dir="${resources.main.dir}">
        <exclude name="**/.svn/**" />
      </fileset>
    </copy>
  </target>

  <!-- テストクラスコンパイル -->
  <target name="compile-test" depends="compile-main" description="テストクラスのコンパイル">
    <javac srcdir="${src.test.dir}" destdir="${classes.test.dir}" debug="on" source="1.5" encoding="UTF-8">
      <classpath>
        <path refid="classpath.test" />
      </classpath>
    </javac>

    <copy todir="${classes.test.dir}">
      <fileset dir="${resources.test.dir}">
        <exclude name="**/.svn/**" />
      </fileset>
    </copy>
  </target>

  <!-- JUnit テスト -->
  <target name="run-junit" depends="compile-test" description="JUnitテスト">
    <mkdir dir="${report.test-result.dir}" />

    <junit printsummary="yes" haltonfailure="no">
      <classpath>
        <path refid="classpath.main" />
        <path refid="classpath.test" />
        <pathelement location="${classes.main.dir}" />
        <pathelement location="${classes.test.dir}" />
      </classpath>

      <sysproperty key="autoTest" value="${autotest}" />

      <formatter type="xml" />

      <batchtest fork="yes" todir="${report.test-result.dir}">
        <fileset dir="${src.test.dir}">
          <include name="**/*Test.java" />
          <exclude name="**/Abstract*Test.java" />
        </fileset>
      </batchtest>
    </junit>
  </target>

  <!-- JUnit レポート作成 -->
  <target name="report-junit" depends="run-junit" description="JUnit レポート作成">
    <antcall target="sub-report-junit" />
  </target>

  <target name="sub-report-junit">
    <mkdir dir="${report.junit.dir}" />

    <junitreport todir="${report.junit.dir}">
      <fileset dir="${report.test-result.dir}">
        <include name="TEST-*.xml" />
      </fileset>
      <report format="frames" todir="${report.junit.dir}" />
    </junitreport>
  </target>

  <!-- カバレッジ計測 -->
  <target name="run-cobertura" depends="compile-test, instrument">
    <mkdir dir="${report.test-result.dir}" />

    <junit printsummary="on" haltonfailure="no">
      <sysproperty key="autoTest" value="${autotest}" />

      <classpath>
        <pathelement location="${classes.instrumented.dir}" />
        <path refid="classpath.main" />
        <path refid="classpath.test" />
        <path refid="classpath.cobertura" />
        <pathelement location="${classes.test.dir}" />
      </classpath>

      <formatter type="xml" />

      <batchtest fork="yes" todir="${report.test-result.dir}">
        <fileset dir="${src.test.dir}">
          <include name="**/*Test.java" />
          <exclude name="**/Abstract*Test.java" />
        </fileset>
      </batchtest>
    </junit>
  </target>

  <!-- カバレッジレポート作成 -->
  <target name="report-coverage" depends="run-cobertura">
    <mkdir dir="${report.coverage.dir}" />

    <antcall target="sub-report-junit" />

    <cobertura:obertura-report format="html" destdir="${report.coverage.dir}">
      <fileset dir="${src.main.dir}">
        <include name="**/*.java" />
      </fileset>
    </cobertura:obertura-report>
  </target>

  <!-- JavaDoc生成 -->
  <target name="javadoc" depends="compile-main" description="JavaDoc生成">
    <javadoc destdir="${docs.api.dir}" encoding="UTF-8" docencoding="UTF-8" charset="UTF-8" author="true" version="true" use="true" nonavbar="false" notree="true" windowtitle="${ant.project.name} ${project.version} API Specifications">
      <sourcepath path="${src.main.dir}" />
      <classpath refid="classpath.main" />
      <package name="org.seasar.uruma.*" />

      <doctitle>${ant.project.name} ${project.version} API Specifications</doctitle>
      <bottom>Copyright &amp;copy; 2004-2008 the Seasar Foundation and the Others. All Rights Reserved.</bottom>

      <link href="http://java.sun.com/j2se/1.5.0/ja/docs/ja/api/" />
      <link href="http://java.sun.com/javaee/5/docs/api/" />
      <link href="http://aopalliance.sourceforge.net/doc/" />
      <link href="http://s2container.seasar.org/2.4/s2-framework/ja/apidocs/" />
      <link href="http://s2container.seasar.org/2.4/s2-extension/ja/apidocs/" />
      <link href="http://s2container.seasar.org/2.4/s2-tiger/ja/apidocs/" />
      <link href="http://help.eclipse.org/help33/nftopic/org.eclipse.platform.doc.isv/reference/api/" />
      <link href="http://www2.osgi.org/javadoc/r4/" />
    </javadoc>
  </target>

  <!-- ant libディレクトリに log4j をダウンロード -->
  <target name="get-log4j" depends="check-ant-log4j-available" unless="ant.log4j.available">
    <echo message="ant ライブラリに log4j が存在しません。" />
    <get dest="${ant.library.dir}/${log4j.filename}" src="${log4j.url}" />
    <fail message="${ant.library.dir}/${log4j.filename} をダウンロードしました。再度 ant を実行してください。" />
  </target>

  <!-- ant libディレクトリに log4j が存在するかチェック -->
  <target name="check-ant-log4j-available">
    <available property="ant.log4j.available" classname="org.apache.log4j.Logger" classpathref="classpath.ant" />
  </target>

  <!-- ビルド準備 -->
  <target name="init" depends="clean, get-log4j" description="ビルド準備">
    <tstamp />
    <mkdir dir="${classes.dir}" />
    <mkdir dir="${classes.main.dir}" />
    <mkdir dir="${classes.test.dir}" />
    <mkdir dir="${classes.instrumented.dir}" />
    <mkdir dir="${target.dir}" />
  </target>

  <!-- クリーンアップ -->
  <target name="clean" description="クリーンアップ">
    <delete dir="${classes.dir}" />
    <delete dir="${target.dir}" />
  </target>

</project>
